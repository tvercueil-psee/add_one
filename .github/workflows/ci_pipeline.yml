name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  ci:
    runs-on: ci-node
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get the Project Version
        run: |
          echo "VERSION=$(git describe --tags | cut -d- -f1,2 | sed s/-/./)" >> $GITHUB_ENV

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          poetry config repositories.prophesee ${{ vars.POETRY_PYPI_REPO_URL_PROPHESEE }}
          poetry config http-basic.prophesee ${{ secrets.POETRY_HTTP_BASIC_PROPHESEE_USERNAME }} ${{ secrets.POETRY_HTTP_BASIC_PROPHESEE_PASSWORD }}

      - name: Run pre-commit Hooks
        uses: pre-commit/action@v3.0.0

      - name: Run Tests
        run: |
          poetry run pytest

#      - name: Sonarqube Scanning
#        uses: sonarsource/sonarqube-scan-action@master
#        with:
#          args: >
#            -Dsonar.projectName=#REPLACE_ME#
#            -Dsonar.projectKey=#REPLACE_ME#
#            -Dsonar.projectVersion=${{ env.VERSION }}
#            -Dsonar.python.version=3.10
#            -Dsonar.python.coverage.reportPaths=coverage.xml
#            -Dsonar.sourceEncoding=UTF-8
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#      - name: Sonarqube Quality Gate
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        timeout-minutes: 3
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build & Publish
        run: |
          poetry version $VERSION
          poetry build
          poetry publish --repository=prophesee
